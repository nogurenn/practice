networks:
  app-tier:
    driver: bridge

services:
  producer:
    build:
      context: .
      args:
        TARGET_APP: producer
    env_file:
      - .env
    ports:
      - "3000:3000"
    volumes:
      - .:/app
    networks:
      - app-tier
  
  test:
    build:
      context: .
      dockerfile: ./scripts/tests.Dockerfile
    env_file:
      - .env
    volumes:
      - .:/app

  testIntegration:
    build:
      context: .
      dockerfile: ./scripts/tests.Dockerfile
    env_file:
      - .env
    volumes:
      - .:/app
    networks:
      - app-tier
    depends_on:
      - db
    command: ["go", "test", "--tags=integration", "-v", "./internal/..."]


  kafka:
    image: 'bitnami/kafka:latest'
    networks:
      - app-tier
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true # Enable auto topic creation for testing convenience

  db:
    image: postgres:17
    env_file:
      - .env
    restart: always
    networks:
      - app-tier

  flyway:
    image: flyway/flyway:11.1
    env_file:
      - .env
    volumes:
      - ./scripts/db/migrations:/flyway/sql
    networks:
      - app-tier
    depends_on:
      - db
    command: -url=jdbc:postgresql://db:$POSTGRES_PORT/kyc_api -user=$POSTGRES_USER -password=$POSTGRES_PASSWORD migrate
  
  mockery:
    image: vektra/mockery:v2.50
    env_file:
      - .env
    volumes:
      - .:/app/src
      - ./scripts/.mockery.yaml:/app/.mockery.yaml
    working_dir: /app/src
